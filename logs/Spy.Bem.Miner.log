2015-09-26 16:14:09,722 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView : null }  ==StorageServiceClientView() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:09,723 [main] INFO  Spy.Bem.Miner - (I) Term Size: 0/6; states: 2/4; Terms: 1; VisitedConcreteStates 0
2015-09-26 16:14:09,723 [main] INFO  Spy.Bem.Miner - (I) CompleteStates: 1
2015-09-26 16:14:09,808 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:09,835 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:09,865 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:09,895 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:09,927 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:09,958 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,009 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,009 [main] DEBUG Spy.Bem.Miner - (I) new Terms: 7
2015-09-26 16:14:10,009 [main] INFO  Spy.Bem.Miner - (I) Term Size: 2/6; states: 6/4; Terms: 7; VisitedConcreteStates 7
2015-09-26 16:14:10,010 [main] INFO  Spy.Bem.Miner - (I) CompleteStates: 2
2015-09-26 16:14:10,091 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:10,131 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:10,152 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:10,190 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:10,220 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:10,245 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:10,276 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:10,298 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:10,317 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,350 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,366 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:10,384 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:10,405 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,433 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,453 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:10,473 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,489 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,513 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:10,530 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:10,550 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,596 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,626 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:10,649 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,677 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:10,705 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,723 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:10,739 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:10,755 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:10,773 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:10,791 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,803 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:10,817 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:10,841 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,856 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:10,873 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:10,889 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:10,905 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,918 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,933 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:10,945 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:10,968 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:10,994 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,014 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,035 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,057 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,081 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,106 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,135 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,172 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,172 [main] DEBUG Spy.Bem.Miner - (I) new Terms: 49
2015-09-26 16:14:11,174 [main] INFO  Spy.Bem.Miner - (I) Final model with term size: 3/6; states: 12/4; Terms: 49; VisitedConcreteStates 56
2015-09-26 16:14:11,174 [main] INFO  Spy.Bem.Miner - (I) Searching Discriminators ... 
2015-09-26 16:14:11,174 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,174 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,174 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,174 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,174 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,174 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,175 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,175 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,175 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,175 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,175 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,175 [main] DEBUG Spy.Bem.Miner - (I) Observable State: { StorageServiceClientView : null } 
2015-09-26 16:14:11,225 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,225 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,226 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView : null }  ==StorageServiceClientView() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,226 [main] INFO  Spy.Bem.Miner - (I) terms: 1; size: 0 / 6; states: { complete: 1; total:2; max: 4 }; invariance counter: 4
2015-09-26 16:14:11,227 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,227 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,227 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,227 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,227 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,228 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,228 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,228 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,228 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,228 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,228 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,228 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,230 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,231 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,231 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,231 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,231 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,232 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,232 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,232 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,232 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,232 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,232 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,232 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,233 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,233 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,233 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,233 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,233 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,233 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,234 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,234 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,234 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,234 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,234 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,234 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,235 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,235 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,235 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,235 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,235 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,235 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,236 [main] DEBUG Spy.Bem.Miner - Complete States: 2 / 6
2015-09-26 16:14:11,236 [main] INFO  Spy.Bem.Miner - (I) terms: 7; size: 2 / 6; states: { complete: 2; total:6; max: 4 }; invariance counter: 3
2015-09-26 16:14:11,237 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,237 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,237 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,237 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,237 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,237 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,238 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,238 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,238 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()finish() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,238 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()finish() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,238 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,238 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,238 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,239 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,239 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,239 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,239 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,239 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,239 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,239 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,240 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,240 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,240 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,240 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,240 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,240 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,241 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,241 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,241 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,241 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,241 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,241 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,241 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,242 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,242 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,242 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,242 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,242 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,242 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,242 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,242 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,243 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,243 [main] DEBUG Spy.Bem.Miner - Complete States: 3 / 7
2015-09-26 16:14:11,243 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,243 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,244 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,244 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,244 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-09-26 16:14:11,244 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,244 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,244 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,244 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,245 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-09-26 16:14:11,245 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,245 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,245 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,245 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,245 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-09-26 16:14:11,246 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,246 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,246 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,246 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,246 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-09-26 16:14:11,246 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,246 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,247 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,247 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,247 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-09-26 16:14:11,247 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,247 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,247 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,247 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,247 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-09-26 16:14:11,248 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,248 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,248 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,248 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()finish()write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,248 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-09-26 16:14:11,248 [main] DEBUG Spy.Bem.Miner - Complete States: 3 / 7
2015-09-26 16:14:11,249 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,249 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,249 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,249 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,249 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-09-26 16:14:11,249 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,249 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,249 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,250 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,250 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-09-26 16:14:11,250 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,250 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,250 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,250 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,250 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-09-26 16:14:11,250 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,251 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,251 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,251 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,251 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-09-26 16:14:11,251 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,251 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,251 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,251 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,251 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-09-26 16:14:11,252 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,252 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,252 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,252 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,252 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-09-26 16:14:11,252 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,252 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,252 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,253 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()hashCode()write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,253 [main] DEBUG Spy.Bem.Miner - REOBSERVED_BEHAVIOR
2015-09-26 16:14:11,253 [main] DEBUG Spy.Bem.Miner - Complete States: 3 / 7
2015-09-26 16:14:11,253 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,253 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,253 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,253 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)close() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,253 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,254 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,254 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,254 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,254 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,254 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,254 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==finish() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,254 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,254 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,254 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,255 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,255 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)hashCode() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,255 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==hashCode() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,255 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,255 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,255 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,255 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,255 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,255 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,255 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,256 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,256 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,256 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,256 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,256 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==putNextEntry(ff).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,256 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,256 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,256 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,257 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,257 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,257 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==unbind() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,257 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,257 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,257 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,257 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,257 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)write([120]) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,257 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null } ==write([120]).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,257 [main] DEBUG Spy.Bem.Miner - DISCRIMINATOR_FOUND
2015-09-26 16:14:11,258 [main] DEBUG Spy.Bem.Miner - Complete States: 4
2015-09-26 16:14:11,258 [main] INFO  Spy.Bem.Miner - (W) States to purge: 0 []
2015-09-26 16:14:11,611 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView : null }  ==StorageServiceClientView() ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & getCanonicalTerm().retval = StorageServiceClientView() & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,612 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & getCanonicalTerm().retval = StorageServiceClientView() & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==putNextEntry(ee).state ==>{ StorageServiceClientView :  close().retval == null & finish().retval == null & getCanonicalTerm().retval = StorageServiceClientView()putNextEntry(ee) & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,612 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close().retval == null & finish().retval == null & getCanonicalTerm().retval = StorageServiceClientView() & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry } ==close() ==>{ StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & getCanonicalTerm().retval = StorageServiceClientView()close() & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval == null & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,617 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,617 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,617 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,617 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,618 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,619 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,619 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] } ==close.state ==>{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] }
2015-09-26 16:14:11,620 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,620 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,620 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,620 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,621 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,621 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,621 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,621 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,621 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] } ==finish.state ==>{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] }
2015-09-26 16:14:11,622 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,622 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,622 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,622 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,623 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,623 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,623 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,623 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,623 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] } ==hashCode.state ==>{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] }
2015-09-26 16:14:11,624 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,624 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,624 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,624 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,624 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,624 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,625 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,625 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,625 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,625 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,625 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,625 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,626 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] } ==putNextEntry.state ==>{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [class java.util.zip.ZipException, void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [void] }
2015-09-26 16:14:11,626 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,626 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,626 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,626 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,627 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,627 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,627 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,627 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,628 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] } ==write.state ==>{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] }
2015-09-26 16:14:11,628 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,628 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,628 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,628 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,628 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,628 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,629 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,629 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,629 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,629 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,631 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [class java.util.zip.ZipException, void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [void] } ==close.state ==>{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] }
2015-09-26 16:14:11,633 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,633 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,634 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,634 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,634 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,634 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,634 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,634 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,635 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,635 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,635 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,635 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,635 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,635 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,635 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,635 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,635 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [class java.util.zip.ZipException, void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [void] } ==hashCode.state ==>{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [class java.util.zip.ZipException, void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [void] }
2015-09-26 16:14:11,636 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,636 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,636 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,636 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,636 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,636 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,636 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,636 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,637 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,637 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)finish() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,637 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,637 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ee) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval == null & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,637 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,637 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,637 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,637 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ee)unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval throws java.util.zip.ZipException: duplicate entry: ee & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval == null }
2015-09-26 16:14:11,638 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [class java.util.zip.ZipException, void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [void] } ==write.state ==>{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [class java.util.zip.ZipException, void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [void] }
2015-09-26 16:14:11,638 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,638 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,639 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,639 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,639 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] } ==close.state ==>{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] }
2015-09-26 16:14:11,639 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,639 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,640 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,640 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,640 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] } ==finish.state ==>{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] }
2015-09-26 16:14:11,641 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,641 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,641 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,641 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,642 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] } ==hashCode.state ==>{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] }
2015-09-26 16:14:11,643 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,643 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,643 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,643 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,644 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] } ==putNextEntry.state ==>{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] }
2015-09-26 16:14:11,644 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,644 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,645 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,645 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,645 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] } ==putNextEntry.state ==>{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] }
2015-09-26 16:14:11,646 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,646 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,646 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,646 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()close()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval throws java.io.IOException: Stream closed & putNextEntry(ee).retval throws java.io.IOException: Stream closed & putNextEntry(ff).retval throws java.io.IOException: Stream closed & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.io.IOException: Stream closed }
2015-09-26 16:14:11,647 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] } ==write.state ==>{ StorageServiceClientView :  close.behaviorINVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [class java.io.IOException] & hashCode.behaviorINVARIANT & putNextEntry.behaviorINVARIANT & putNextEntry.retval instanceof [class java.io.IOException] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.io.IOException] }
2015-09-26 16:14:11,647 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,647 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()putNextEntry(ff) to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval throws java.util.zip.ZipException: duplicate entry: ff & unbind().retval == null & write([120]).retval == null }
2015-09-26 16:14:11,647 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,647 [main] DEBUG Spy.Bem.Miner - * Abstracting behavior of StorageServiceClientView()unbind() to { StorageServiceClientView :  close().retval == null & finish().retval == null & putNextEntry(ee).retval == null & putNextEntry(ff).retval == null & unbind().retval throws storageServer.InstanceException & write([120]).retval throws java.util.zip.ZipException: no current ZIP entry }
2015-09-26 16:14:11,648 [main] DEBUG Spy.Bem.Miner - (+t) 	:{ StorageServiceClientView : null }  ==StorageServiceClientView.state ==>{ StorageServiceClientView :  close.behaviorVARIANT & close.retval instanceof [void] & finish.behaviorINVARIANT & finish.retval instanceof [void] & hashCode.behaviorINVARIANT & putNextEntry.behaviorVARIANT & putNextEntry.retval instanceof [void] & unbind.behaviorVARIANT & unbind.retval instanceof [void] & write.behaviorINVARIANT & write.retval instanceof [class java.util.zip.ZipException] }
